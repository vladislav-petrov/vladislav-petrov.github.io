{"mappings":"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","sources":["./src/js/model.js","./src/js/views/switchTabsView/switchTabsView.js","./src/js/views/view.js","./src/js/views/mathModelView/mathModelView.js","./src/js/views/intModelView/visualizationView/visualizationView.js","./src/js/views/intModelView/parametersView/parametersView.js","./src/js/views/intModelView/characteristicsView/characteristicsView.js","./src/js/views/intModelView/intModelView.js","./src/js/controller.js"],"sourcesContent":["export const state = {\r\n  parameters: {\r\n    m: {\r\n      ok: true,\r\n      value: '0.5'\r\n    },\r\n    k: {\r\n      ok: true,\r\n      value: '5'\r\n    },\r\n    x0: {\r\n      ok: true,\r\n      value: '10'\r\n    },\r\n    readOnly: false\r\n  },\r\n  characteristics: {\r\n    w0: '-',\r\n    t: '-',\r\n    n: '-',\r\n    x: '-'\r\n  },\r\n  visualization: {\r\n    active: false,\r\n    disabled: false,\r\n    polylineInitialPoints: [\r\n      [250, 20],\r\n      [250, 60],\r\n      [230, 75],\r\n      [270, 105],\r\n      [230, 135],\r\n      [270, 165],\r\n      [230, 195],\r\n      [270, 225],\r\n      [230, 255],\r\n      [270, 285],\r\n      [250, 300],\r\n      [250, 340]\r\n    ],\r\n    polylineCurrentPoints: [\r\n      [250, 20],\r\n      [250, 60],\r\n      [230, 75],\r\n      [270, 105],\r\n      [230, 135],\r\n      [270, 165],\r\n      [230, 195],\r\n      [270, 225],\r\n      [230, 255],\r\n      [270, 285],\r\n      [250, 300],\r\n      [250, 340]\r\n    ],\r\n    circle: {\r\n      circleCoords: {\r\n        cx: 250,\r\n        cy: 0\r\n      },\r\n      circleRadius: 25\r\n    }\r\n  }\r\n}\r\n\r\n// Обновление состояния кнопки запуска визуализации (кликабельна/не кликабельна)\r\nconst updateVisualState = function() {\r\n  state.visualization.disabled = state.parameters.m.ok && state.parameters.k.ok && state.parameters.x0.ok ? false : true;\r\n}\r\n\r\n// Обновление значения циклической частоты\r\nexport const updateStaticCharacteristic = function() {\r\n  const m = state.parameters.m;\r\n  const k = state.parameters.k;\r\n\r\n  state.characteristics.w0 = m.ok && k.ok ? Math.round(Math.sqrt(+k.value / +m.value) * 10) / 10 : '-';\r\n}\r\n\r\nconst setInitialCharacteristics = function() {\r\n  state.characteristics.t = '-';\r\n  state.characteristics.n = '-'\r\n  state.characteristics.x = '-'\r\n}\r\n\r\n// Обновление координаты y груза + обновление радиуса при каждом смещении пружины\r\nconst updateCircleData = function() {\r\n  if (state.parameters.m.ok) {\r\n    const newRadius = Math.round((60 * Math.sqrt(Math.sqrt(+state.parameters.m.value)) / 2));\r\n\r\n    state.visualization.circle.circleCoords.cy = (state.visualization.circle.circleCoords.cy - state.visualization.circle.circleRadius) + newRadius;\r\n    state.visualization.circle.circleRadius = newRadius;\r\n  }\r\n}\r\n\r\n// Обновление смещения пружины\r\nexport const updateSpringOffset = function(offset) {\r\n  // 2см = 10px\r\n\r\n  // Отклонение от равновесия в px всей пружины (вниз)\r\n  const offsetAll = (offset * 10) / 2;\r\n\r\n  // Отклонение отдельного элемента пружины\r\n  const offsetOne = offsetAll / 10;\r\n\r\n  // Длина линии пружины\r\n  const lengthLine = 50;\r\n  const lengthYLine = 30;\r\n\r\n  // Координата x центра\r\n  const centerX = 250;\r\n\r\n  let yOffset;\r\n\r\n  // Расчет новых координат для каждой точки полилайна\r\n  state.visualization.polylineCurrentPoints = state.visualization.polylineInitialPoints.map((coords, i) => {\r\n    const bottomLength = Math.round(Math.sqrt(lengthLine * lengthLine - (lengthYLine + offsetOne) * (lengthYLine + offsetOne)));\r\n\r\n    if (i === 0 || i === 1) {\r\n      return coords;\r\n    }\r\n\r\n    if (coords[0] < centerX) {\r\n      return [(centerX - Math.round(bottomLength / 2)), coords[1] + offsetOne * (i - 1)];\r\n    }\r\n\r\n    if (coords[0] > centerX) {\r\n      return [(centerX + Math.round(bottomLength / 2)), coords[1] + offsetOne * (i - 1)];\r\n    }\r\n\r\n    if (coords[0] === centerX) {\r\n      const yCoord = coords[1] + offsetOne * (i - 1);\r\n\r\n      if (i === 11) {\r\n        yOffset = yCoord;\r\n      }\r\n\r\n      return [centerX, yCoord];\r\n    }\r\n  });\r\n\r\n  // Обновляем y-координату груза, т.к пружина сместилась\r\n  state.visualization.circle.circleCoords.cy = yOffset + state.visualization.circle.circleRadius;\r\n}\r\n\r\n// Обновление статуса кнопки визуализации (активна/неактивна)\r\nexport const toggleVisualStatus = function() {\r\n  state.visualization.active = !state.visualization.active;\r\n\r\n  state.parameters.readOnly = state.visualization.active;\r\n}\r\n\r\n// Ввод параметров от пользователя\r\nexport const updateInputValue = function(fieldId, value) {\r\n  let valueFormated = value.replaceAll(',', '.');\r\n  let localOK = true;\r\n\r\n  if (valueFormated === '' || valueFormated.slice(-1) === '.' || valueFormated.slice(0) === '.') {\r\n    localOK = false;\r\n  }\r\n\r\n  switch (true) {\r\n    case fieldId === 'm': {\r\n      state.parameters.m.value = valueFormated;\r\n      state.parameters.m.ok = +valueFormated >= 0.5 && +valueFormated <= 1 && (+valueFormated * 10) % 1 === 0 && localOK ? true : false;\r\n      updateCircleData();\r\n      break;\r\n    }\r\n\r\n    case fieldId === 'k': {\r\n      state.parameters.k.value = valueFormated;\r\n      state.parameters.k.ok = +valueFormated >= 5 && +valueFormated <= 9 && +valueFormated % 1 === 0 && localOK ? true : false;\r\n      break;\r\n    }\r\n\r\n    case fieldId === 'x0': {\r\n      state.parameters.x0.value = valueFormated;\r\n      state.parameters.x0.ok = +valueFormated >= 0 && +valueFormated <= 20 && +valueFormated % 2 === 0 && localOK ? true : false;\r\n\r\n      if (state.parameters.x0.ok) {\r\n        updateSpringOffset(+state.parameters.x0.value);\r\n      }\r\n\r\n      break;\r\n    }\r\n\r\n    default: {\r\n      return;\r\n    }\r\n  }\r\n\r\n  // Меняем состояние кнопки в зависимости от корректности введенных параметров\r\n  updateVisualState();\r\n\r\n  // Считаем новое значение циклической частоты\r\n  updateStaticCharacteristic();\r\n\r\n  // Сбрасываем значения характеристик после прощлой визуализации\r\n  setInitialCharacteristics();\r\n\r\n  // Сбрасываем смещение пружины после прошлой визуализации\r\n  if (state.parameters.x0.ok) {\r\n    updateSpringOffset(+state.parameters.x0.value);\r\n  }\r\n}\r\n\r\n// Считаем характеристики\r\nexport const calcCharacteristics = function(t) {\r\n  const x0 = +state.parameters.x0.value;\r\n  const w0 = +state.characteristics.w0;\r\n  const interval = (2 * Math.PI) / w0;\r\n\r\n  state.characteristics.t = (Math.round((t / 1000) * 10) / 10).toFixed(1);\r\n  state.characteristics.x = (Math.round((x0 * Math.cos(w0 * (t / 1000))) * 10) / 10).toFixed(1);\r\n  state.characteristics.n = x0 > 0 ? Math.trunc((t / 1000) / interval) : 0;\r\n}\r\n","class SwitchTabsView {\r\n  _parentElement = document.querySelector('.app-content__switch-buttons');\r\n\r\n  addHandlerSwitchTabs(handler) {\r\n    this._parentElement.addEventListener('click', function(event) {\r\n      const clickedButton = event.target.closest('.switch-buttons__button');\r\n      const buttons = Array.from(this.querySelectorAll('.switch-buttons__button'));\r\n\r\n      if (clickedButton && !clickedButton.classList.contains('button--active')) {\r\n        buttons.forEach((button) => {\r\n          button.classList.toggle('button--active');\r\n        });\r\n\r\n        handler(clickedButton.querySelector('span').textContent.trim());\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nexport default new SwitchTabsView();\r\n","class View {\r\n  render(data = null) {\r\n    const markup = this._generateMarkup(data);\r\n    this._insertMarkup(markup);\r\n  }\r\n\r\n  // Метод для апдейта вьюшки: вместо полного ререндеринга, как в методе render, тут меняется только текст в элементах\r\n  // + их атрибуты, что повышает производительность кода + позволяет обращаться к одним и тем же элементам много раз\r\n  update(data) {\r\n    const newMarkup = this._generateMarkup(data);\r\n    const newDom = document.createRange().createContextualFragment(newMarkup);\r\n    const newElements = Array.from(newDom.querySelectorAll('*'));\r\n    const currentElements = Array.from(document.querySelector(`.${this._parentElementClass}`).querySelectorAll('*'));\r\n\r\n    newElements.forEach((newElement, i) => {\r\n      const currentElement = currentElements[i];\r\n\r\n      if (currentElement.classList.contains('parameter-value__input')) {\r\n        currentElement.readOnly = data.readOnly;\r\n      }\r\n\r\n      if (!newElement.isEqualNode(currentElement) && newElement.firstChild?.nodeValue.trim() !== '') {\r\n        currentElement.textContent = newElement.textContent;\r\n      }\r\n\r\n      if (!newElement.isEqualNode(currentElement)) {\r\n        Array.from(newElement.attributes).forEach((attribute) => {\r\n          currentElement.setAttribute(attribute.name, attribute.value);\r\n        })\r\n      }\r\n    });\r\n  }\r\n\r\n  // Метод для вставки разметки в контейнер (родительский элемент)\r\n  _insertMarkup(markup) {\r\n    document.querySelector(`.${this._parentElementClass}`).innerHTML = '';\r\n    document.querySelector(`.${this._parentElementClass}`).insertAdjacentHTML('afterbegin', markup);\r\n  }\r\n}\r\n\r\nexport default View;\r\n","import View from '../view.js';\r\n\r\nclass MathModelView extends View {\r\n  _parentElementClass = 'app-content__model-content';\r\n\r\n  _generateMarkup() {\r\n    return (\r\n      `\r\n        <div class=\"math-model__container\">\r\n          <span class=\"math-model__text\">\r\n            Колебательное движение пружинного маятника описывается следующей формулой:\r\n          </span>\r\n          <span class=\"math-model__formula\">\r\n            x(t) = x<sub>0</sub>cos(ω<sub>0</sub>t),\r\n          </span>\r\n          <span class=\"math-model__divider-text\">\r\n            или\r\n          </span>\r\n          <span class=\"math-model__formula\">\r\n            x(t) = x<sub>0</sub>cos(\r\n              <math>\r\n                <msqrt>\r\n                  <mfrac>\r\n                    <mi>k</mi>\r\n                    <mi>m</mi>\r\n                  </mfrac>\r\n                </msqrt>\r\n              </math>\r\n            t),\r\n          </span>\r\n          <div class=\"math-model__description\">\r\n            <span class=\"description__intro-word\">\r\n              где\r\n            </span>\r\n            <div class=\"description__variables\">\r\n              <span class=\"variables__item\">\r\n                x\r\n              </span>\r\n              <span class=\"variables__item\">\r\n                t\r\n              </span>\r\n              <span class=\"variables__item\">\r\n                x<sub>0</sub>\r\n              </span>\r\n              <span class=\"variables__item\">\r\n                ω<sub>0</sub>\r\n              </span>\r\n              <span class=\"variables__item\">\r\n                k\r\n              </span>\r\n              <span class=\"variables__item\">\r\n                m\r\n              </span>\r\n            </div>\r\n            <div class=\"description__text\">\r\n              <span class=\"text__item\">\r\n                - координата,\r\n              </span>\r\n              <span class=\"text__item\">\r\n                - время колебаний,\r\n              </span>\r\n              <span class=\"text__item\">\r\n                - первоначальное отклонение от равновесия,\r\n              </span>\r\n              <span class=\"text__item\">\r\n                - циклическая частота собственных колебаний,\r\n              </span>\r\n              <span class=\"text__item\">\r\n                - жесткость пружины,\r\n              </span>\r\n              <span class=\"text__item\">\r\n                - масса груза.\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      `\r\n    );\r\n  }\r\n}\r\n\r\nexport default new MathModelView();\r\n","import View from '../../view.js';\r\n\r\nclass VisualizationView extends View {\r\n  _parentElementClass = 'int-model-visualization';\r\n\r\n  _generateMarkup(data) {\r\n    return (\r\n      `\r\n        <h2 class=\"visualization-heading\">\r\n          Визуализация\r\n        </h2>\r\n        <div class=\"visualization-content\">\r\n          <svg\r\n            class=\"visualization-svg\"\r\n            width=\"500px\"\r\n            height=\"640px\"\r\n          >\r\n            <line\r\n              x1=\"210\"\r\n              y1=\"0\"\r\n              x2=\"200\"\r\n              y2=\"20\"\r\n              style=\"stroke:#2d3436;stroke-width:2\"\r\n            />\r\n            <line\r\n              x1=\"220\"\r\n              y1=\"0\"\r\n              x2=\"210\"\r\n              y2=\"20\"\r\n              style=\"stroke:#2d3436;stroke-width:2\"\r\n            />\r\n            <line\r\n              x1=\"230\"\r\n              y1=\"0\"\r\n              x2=\"220\"\r\n              y2=\"20\"\r\n              style=\"stroke:#2d3436;stroke-width:2\"\r\n            />\r\n            <line\r\n              x1=\"240\"\r\n              y1=\"0\"\r\n              x2=\"230\"\r\n              y2=\"20\"\r\n              style=\"stroke:#2d3436;stroke-width:2\"\r\n            />\r\n            <line\r\n              x1=\"250\"\r\n              y1=\"0\"\r\n              x2=\"240\"\r\n              y2=\"20\"\r\n              style=\"stroke:#2d3436;stroke-width:2\"\r\n            />\r\n            <line\r\n              x1=\"260\"\r\n              y1=\"0\"\r\n              x2=\"250\"\r\n              y2=\"20\"\r\n              style=\"stroke:#2d3436;stroke-width:2\"\r\n            />\r\n            <line\r\n              x1=\"270\"\r\n              y1=\"0\"\r\n              x2=\"260\"\r\n              y2=\"20\"\r\n              style=\"stroke:#2d3436;stroke-width:2\"\r\n            />\r\n            <line\r\n              x1=\"280\"\r\n              y1=\"0\"\r\n              x2=\"270\"\r\n              y2=\"20\"\r\n              style=\"stroke:#2d3436;stroke-width:2\"\r\n            />\r\n            <line\r\n              x1=\"290\"\r\n              y1=\"0\"\r\n              x2=\"280\"\r\n              y2=\"20\"\r\n              style=\"stroke:#2d3436;stroke-width:2\"\r\n            />\r\n            <line\r\n              x1=\"300\"\r\n              y1=\"0\"\r\n              x2=\"290\"\r\n              y2=\"20\"\r\n              style=\"stroke:#2d3436;stroke-width:2\"\r\n            />\r\n            <line\r\n              x1=\"310\"\r\n              y1=\"0\"\r\n              x2=\"300\"\r\n              y2=\"20\"\r\n              style=\"stroke:#2d3436;stroke-width:2\"\r\n            />\r\n            <line\r\n              x1=\"200\"\r\n              y1=\"20\"\r\n              x2=\"300\"\r\n              y2=\"20\"\r\n              style=\"stroke:#2d3436;stroke-width:2\"\r\n            />\r\n            <polyline\r\n              id=\"svg-polyline\"\r\n              points=\"\r\n                ${data.polylineCurrentPoints[0][0]},${data.polylineCurrentPoints[0][1]}\r\n                ${data.polylineCurrentPoints[1][0]},${data.polylineCurrentPoints[1][1]}\r\n                ${data.polylineCurrentPoints[2][0]},${data.polylineCurrentPoints[2][1]}\r\n                ${data.polylineCurrentPoints[3][0]},${data.polylineCurrentPoints[3][1]}\r\n                ${data.polylineCurrentPoints[4][0]},${data.polylineCurrentPoints[4][1]}\r\n                ${data.polylineCurrentPoints[5][0]},${data.polylineCurrentPoints[5][1]}\r\n                ${data.polylineCurrentPoints[6][0]},${data.polylineCurrentPoints[6][1]}\r\n                ${data.polylineCurrentPoints[7][0]},${data.polylineCurrentPoints[7][1]}\r\n                ${data.polylineCurrentPoints[8][0]},${data.polylineCurrentPoints[8][1]}\r\n                ${data.polylineCurrentPoints[9][0]},${data.polylineCurrentPoints[9][1]}\r\n                ${data.polylineCurrentPoints[10][0]},${data.polylineCurrentPoints[10][1]}\r\n                ${data.polylineCurrentPoints[11][0]},${data.polylineCurrentPoints[11][1]}\r\n              \"\r\n              style=\"fill:none;stroke:#2d3436;stroke-width:2\"\r\n            />\r\n            <circle\r\n              cx=\"${data.circle.circleCoords.cx}\"\r\n              cy=\"${data.circle.circleCoords.cy}\"\r\n              r=\"${data.circle.circleRadius}px\"\r\n              stroke=\"#2d3436\"\r\n              stroke-width=\"2\"\r\n              fill=\"#a6b1b6a1\"\r\n            />\r\n          </svg>\r\n          <button\r\n            class=\"visualization-button ${data.active ? 'button--active' : ''} ${data.disabled ? 'button--disabled' : ''}\"\r\n            type=\"button\"\r\n          >\r\n            ${data.active ? 'Остановить визуализацию' : 'Запустить визуализацию'}\r\n          </button>\r\n        </div>\r\n      `\r\n    );\r\n  }\r\n\r\n  addHandlerSwitchVisual(handler) {\r\n    document.querySelector(`.${this._parentElementClass}`).addEventListener('click', function(event) {\r\n      if (event.target === document.querySelector('.visualization-button')) {\r\n        handler();\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nexport default new VisualizationView();\r\n","import View from '../../view.js';\r\n\r\nclass ParametersView extends View {\r\n  _parentElementClass = 'int-model-parameters';\r\n\r\n  _generateMarkup(data) {\r\n    return (\r\n      `\r\n        <h2 class=\"parameters-heading\">\r\n          Параметры\r\n        </h2>\r\n        <div class=\"parameters-content\">\r\n          <div class=\"parameter-block\">\r\n            <h3 class=\"parameter-heading\">\r\n              Масса груза\r\n            </h3>\r\n            <span class=\"parameter-literal\">\r\n              m\r\n            </span>\r\n            <span class=\"parameter-colon\">\r\n              :\r\n            </span>\r\n            <div class=\"parameter-value\">\r\n              <input\r\n                class=\"parameter-value__input ${data.m.ok ? '' : 'input--warning'} ${data.readOnly ? 'input--disabled' : ''}\"\r\n                type=\"text\"\r\n                id=\"m\"\r\n                value=\"${data.m.value}\"\r\n              >\r\n              <span class=\"parameter-value__description\">\r\n                (0.5 - 1, шаг 0.1)\r\n              </span>\r\n            </div>\r\n            <span class=\"parameter-unit\">\r\n              кг\r\n            </span>\r\n          </div>\r\n          <div class=\"parameter-block\">\r\n            <h3 class=\"parameter-heading\">\r\n              Жесткость пружины\r\n            </h3>\r\n            <span class=\"parameter-literal\">\r\n              k\r\n            </span>\r\n            <span class=\"parameter-colon\">\r\n              :\r\n            </span>\r\n            <div class=\"parameter-value\">\r\n              <input\r\n                class=\"parameter-value__input ${data.k.ok ? '' : 'input--warning'} ${data.readOnly ? 'input--disabled' : ''}\"\r\n                type=\"text\"\r\n                id=\"k\"\r\n                value=\"${data.k.value}\"\r\n              >\r\n              <span class=\"parameter-value__description\">\r\n                (5 - 9, шаг 1)\r\n              </span>\r\n            </div>\r\n            <span class=\"parameter-unit\">\r\n              Н/м\r\n            </span>\r\n          </div>\r\n          <div class=\"parameter-block\">\r\n            <h3 class=\"parameter-heading\">\r\n              Первоначальное отклонение от равновесия\r\n            </h3>\r\n            <span class=\"parameter-literal\">\r\n              x<sub>0</sub>\r\n            </span>\r\n            <span class=\"parameter-colon\">\r\n              :\r\n            </span>\r\n            <div class=\"parameter-value\">\r\n              <input\r\n                class=\"parameter-value__input ${data.x0.ok ? '' : 'input--warning'} ${data.readOnly ? 'input--disabled' : ''}\"\r\n                type=\"text\"\r\n                id=\"x0\"\r\n                value=\"${data.x0.value}\"\r\n              >\r\n              <span class=\"parameter-value__description\">\r\n                (0 - 20, шаг 2)\r\n              </span>\r\n            </div>\r\n            <span class=\"parameter-unit\">\r\n              см\r\n            </span>\r\n          </div>\r\n        </div>\r\n      `\r\n    );\r\n  }\r\n\r\n  addHandlerInputParameter(handler) {\r\n    document.querySelector(`.${this._parentElementClass}`).addEventListener('input', function(event) {\r\n      if (event.target.classList.contains('parameter-value__input')) {\r\n        handler(event.target.getAttribute('id'), event.target.value);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nexport default new ParametersView();\r\n","import View from '../../view.js';\r\n\r\nclass CharacteristicsView extends View {\r\n  _parentElementClass = 'int-model-characteristics';\r\n\r\n  _generateMarkup(data) {\r\n    return (\r\n      `\r\n        <h2 class=\"characteristics-heading\">\r\n          Характеристики\r\n        </h2>\r\n        <div class=\"characteristics-content\">\r\n          <div class=\"characteristic-block\">\r\n            <h3 class=\"characteristic-heading\">\r\n              Циклическая частота собственных колебаний\r\n            </h3>\r\n            <span class=\"characteristic-literal\">\r\n              ω<sub>0\r\n            </span>\r\n            <span class=\"characteristic-colon\">\r\n              :\r\n            </span>\r\n            <span class=\"characteristic-value\">\r\n              ${data.w0}\r\n            </span>\r\n            <span class=\"characteristic-unit\">\r\n              рад/с\r\n            </span>\r\n          </div>\r\n          <div class=\"characteristic-block\">\r\n            <h3 class=\"characteristic-heading\">\r\n              Время колебаний\r\n            </h3>\r\n            <span class=\"characteristic-literal\">\r\n              t\r\n            </span>\r\n            <span class=\"characteristic-colon\">\r\n              :\r\n            </span>\r\n            <span class=\"characteristic-value\">\r\n              ${data.t}\r\n            </span>\r\n            <span class=\"characteristic-unit\">\r\n              с\r\n            </span>\r\n          </div>\r\n          <div class=\"characteristic-block\">\r\n            <h3 class=\"characteristic-heading\">\r\n              Количество полных колебаний\r\n            </h3>\r\n            <span class=\"characteristic-literal\">\r\n              n\r\n            </span>\r\n            <span class=\"characteristic-colon\">\r\n              :\r\n            </span>\r\n            <span class=\"characteristic-value\">\r\n              ${data.n}\r\n            </span>\r\n            <span class=\"characteristic-unit\"></span>\r\n          </div>\r\n          <div class=\"characteristic-block\">\r\n            <h3 class=\"characteristic-heading\">\r\n              Координата\r\n            </h3>\r\n            <span class=\"characteristic-literal\">\r\n              x\r\n            </span>\r\n            <span class=\"characteristic-colon\">\r\n              :\r\n            </span>\r\n            <span class=\"characteristic-value\">\r\n              ${data.x}\r\n            </span>\r\n            <span class=\"characteristic-unit\">\r\n              см\r\n            </span>\r\n          </div>\r\n        </div>\r\n      `\r\n    );\r\n  }\r\n}\r\n\r\nexport default new CharacteristicsView();\r\n","import View from '../view.js';\r\nimport visualizationView from './visualizationView/visualizationView.js';\r\nimport parametersView from './parametersView/parametersView.js';\r\nimport characteristicsView from './characteristicsView/characteristicsView.js';\r\n\r\nclass IntModelView extends View {\r\n  _parentElementClass = 'app-content__model-content';\r\n\r\n  _generateMarkup(data) {\r\n    return (\r\n      `\r\n        <div class=\"int-model-container\">\r\n          <div class=\"int-model-description\">\r\n            <span class=\"int-model-description__text\">\r\n              Интерактивная модель позволяет на основании введенных параметров рассчитать характеристики колебательного движения и визуализировать процесс.\r\n            </span>\r\n          </div>\r\n          <div class=\"int-model-visualization\">\r\n            ${visualizationView._generateMarkup(data.visualization)}\r\n          </div>\r\n          <div class=\"int-model-parameters\">\r\n            ${parametersView._generateMarkup(data.parameters)}\r\n          </div>\r\n          <div class=\"int-model-characteristics\">\r\n            ${characteristicsView._generateMarkup(data.characteristics)}\r\n          </div>\r\n        </div>\r\n      `\r\n    );\r\n  }\r\n}\r\n\r\nexport default new IntModelView();\r\n","import * as model from './model.js';\r\nimport switchTabsView from './views/switchTabsView/switchTabsView.js';\r\nimport mathModelView from './views/mathModelView/mathModelView.js';\r\nimport intModelView from './views/intModelView/intModelView.js';\r\nimport visualizationView from './views/intModelView/visualizationView/visualizationView.js';\r\nimport parametersView from './views/intModelView/parametersView/parametersView.js';\r\nimport characteristicsView from './views/intModelView/characteristicsView/characteristicsView.js';\r\n\r\nconst controlSwitchTabs = function(modelType) {\r\n  if (modelType === 'Математическая модель') {\r\n    mathModelView.render();\r\n\r\n    // Останавливаем визуализацию при переходе на вкладку \"Мат. модель\"\r\n    if (model.state.visualization.active) {\r\n      model.toggleVisualStatus();\r\n    }\r\n  }\r\n\r\n  if (modelType === 'Интерактивная модель') {\r\n    intModelView.render(model.state);\r\n\r\n    // Привязываем хэндлеры для вьюшек из intModelView каждый раз при рендеринге intModelView\r\n    visualizationView.addHandlerSwitchVisual(controlSwitchVisual);\r\n    parametersView.addHandlerInputParameter(controlInputParameter);\r\n  \r\n    // Достаем из state последние значения характеристик, параметров, координат пружины и воссоздаем картину на том моменте, на котором ушли на вкладку \"Мат. модель\" +\r\n    // инициализируем координаты пружины и другие характеристики при первом открытии вкладки \"Инт. модель\"\r\n    model.updateStaticCharacteristic();\r\n    model.updateSpringOffset(isFinite(+model.state.characteristics.x) ? +model.state.characteristics.x : +model.state.parameters.x0.value);\r\n    characteristicsView.update(model.state.characteristics);\r\n    visualizationView.update(model.state.visualization);\r\n    parametersView.update(model.state.parameters);\r\n  }\r\n}\r\n\r\n// Контроль ввода параметров от пользователя\r\nconst controlInputParameter = function(fieldId, value) {\r\n  model.updateInputValue(fieldId, value);\r\n  parametersView.update(model.state.parameters);\r\n  visualizationView.update(model.state.visualization);\r\n  characteristicsView.update(model.state.characteristics);\r\n}\r\n\r\n// Контроль переключения визуализации (активна/неактивна)\r\nconst controlSwitchVisual = function() {\r\n  model.toggleVisualStatus();\r\n  visualizationView.update(model.state.visualization);\r\n  parametersView.update(model.state.parameters);\r\n\r\n  if (model.state.visualization.active) {\r\n    const start = Date.now();\r\n\r\n    // При запуске визуализации характеристики и смещение пружины рассчитываются через каждые 20ms для точности и плавности анимации\r\n    const controlVisualization = setInterval(() => {\r\n      const timePassed = Date.now() - start;\r\n\r\n      // Очищаем интервал и останавливаем рассчет + анимацию при нажатии кнопки \"Остановить визуализацию\"\r\n      if (!model.state.visualization.active) {\r\n        clearInterval(controlVisualization);\r\n      }\r\n\r\n      model.calcCharacteristics(timePassed);\r\n      characteristicsView.update(model.state.characteristics);\r\n      model.updateSpringOffset(+model.state.characteristics.x);\r\n      visualizationView.update(model.state.visualization);\r\n    }, 20);\r\n  }\r\n}\r\n\r\nconst init = function() {\r\n  mathModelView.render();\r\n\r\n  // Хэндлер для кнопок переключения вкладок\r\n  switchTabsView.addHandlerSwitchTabs(controlSwitchTabs);\r\n}\r\n\r\ninit();\r\n"],"names":["$432807eba433c837fb46bd3330e112be$export$state","parameters","m","ok","value","k","x0","readOnly","characteristics","w0","t","n","x","visualization","active","disabled","polylineInitialPoints","polylineCurrentPoints","circle","circleCoords","cx","cy","circleRadius","$432807eba433c837fb46bd3330e112be$export$updateStaticCharacteristic","Math","round","sqrt","$432807eba433c837fb46bd3330e112be$export$updateSpringOffset","offset","offsetOne","centerX","yOffset","map","coords","i","bottomLength","lengthLine","yCoord","$432807eba433c837fb46bd3330e112be$export$toggleVisualStatus","$432807eba433c837fb46bd3330e112be$export$updateInputValue","fieldId","valueFormated","replaceAll","localOK","slice","newRadius","$432807eba433c837fb46bd3330e112be$var$updateCircleData","_parentElement","document","querySelector","addHandlerSwitchTabs","handler","this","addEventListener","event","clickedButton","target","closest","buttons","Array","from","querySelectorAll","classList","contains","forEach","button","toggle","textContent","trim","$90a9ec88b0022664e8fac599ef413374$export$default","render","data","markup","_generateMarkup","_insertMarkup","update","newMarkup","newDom","createRange","createContextualFragment","newElements","currentElements","_parentElementClass","newElement","currentElement","isEqualNode","firstChild","nodeValue","attributes","attribute","setAttribute","name","innerHTML","insertAdjacentHTML","addHandlerSwitchVisual","addHandlerInputParameter","getAttribute","$d13712820ca5e1f6986cbe8ea4cce0db$var$controlSwitchTabs","modelType","$d13712820ca5e1f6986cbe8ea4cce0db$var$controlSwitchVisual","$d13712820ca5e1f6986cbe8ea4cce0db$var$controlInputParameter","isFinite","start","Date","now","controlVisualization","setInterval","timePassed","clearInterval","interval","PI","toFixed","cos","trunc"],"version":3,"file":"index.e32a3784.js.map"}